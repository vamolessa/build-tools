
name: build-dawn

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  info:
    runs-on: ubuntu-24.04
    outputs:
      BUILD_DATE: ${{ steps.info.outputs.BUILD_DATE }}
    steps:
      - name: Get Latest Commit Id
        id: info
        run: |
          echo BUILD_DATE=`date +'%Y-%m-%d'` >> ${GITHUB_OUTPUT}

  build-windows:
    runs-on: windows-2022
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Windows SDK v10.0.26100.0
        shell: cmd
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" modify --installPath "C:\Program Files\Microsoft Visual Studio\2022\Enterprise" --quiet --force --norestart --add Microsoft.VisualStudio.Component.Windows11SDK.26100

      - name: Run Build Script
        id: build
        shell: cmd
        run: call build.bat

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tools-win
          path: tools-win.zip
          if-no-files-found: error
          compression-level: 0

  build-mac:
    runs-on: macos-latest
    steps:

      - name: Update XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Build Script
        id: build
        shell: bash
        run: bash build.sh mac

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tools-mac
          path: tools-mac.zip
          if-no-files-found: error
          compression-level: 0

  release:
    runs-on: ubuntu-24.04
    needs: [build-windows, build-mac]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:

      - name: Create GitHub Release
        run: |
          echo 'tools' >> notes.txt
          gh release create ${{ needs.info.outputs.BUILD_DATE }} -R "${GITHUB_REPOSITORY}" -t '${{ needs.info.outputs.BUILD_DATE }}' -F notes.txt

      - name: Get Artifacts From Build Steps
        uses: actions/download-artifact@v4
        with:
          pattern: tools-*
          merge-multiple: true

      - name: Upload Artifacts to GitHub Release
        run: gh release upload '${{ needs.info.outputs.BUILD_DATE }}' tools-*.zip -R "${GITHUB_REPOSITORY}"
